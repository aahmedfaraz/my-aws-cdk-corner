import { SecretsManager } from 'aws-sdk';
import { randomBytes } from 'crypto';

type Event = {
    SecretId: String,
    ClientRequestToken: String,
    Step: 'createSecret' | 'setSecret' | 'testSecret' | 'finishSecret'
}

const secretManagerForRotation = new SecretsManager({
    region: process.env.REGION || 'us-west-2'
})

exports.handler = async (event : Event) => {

    if(event.Step === 'createSecret') {
        await secretManagerForRotation.putSecretValue({
            SecretId: `${process.env.SECRET_NAME_FOR_ROTATION}`,
            SecretString: JSON.stringify({
                [`${process.env.KEY_IN_SECRET_NAME}`]: randomBytes(32).toString('hex')
            }),
            VersionStages: ['AWSCURRENT']
        }).promise();
    }

    const secretsManager = new SecretsManager();
    const secretValue = await secretsManager.getSecretValue({
        SecretId: 'ahmed-secret-with-value-defined'
    }).promise();
    console.log('Secret Value : ', secretValue);
    

    return {
        statusCode: 200,
        headers: { 'Content/Type' : 'text/plain' },
        body: `Hello, CDK! You've hit keys, [SecretWithNameDefined:${process.env.SECRET_WITH_NAME_DEFINED}] & [SecretWithNameAutoGenerated:${process.env.SECRET_WITH_NAME_AUTO_GENERATED}] & [SecretWithValueDefined:${process.env.SECRET_WITH_VALUE_DEFINED}}]`
    }
}